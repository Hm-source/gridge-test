name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Spring Boot Build
        run: ./gradlew clean build -x test

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/gridgestagram .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}

      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/gridgestagram

      - name: get GitHub IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_DEPLOY_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_DEPLOY_SECRET }}
          aws-region: ap-northeast-2

      - name: Add GitHub IP to AWS
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: AWS EC2 Connection
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: ${{ secrets.EC2_SSH_PORT }}
          timeout: 60s
          script: |
            echo "${{ secrets.DOCKERHUB_PW }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            sudo docker stop gridgestagram
            sudo docker rm gridgestagram
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/gridgestagram
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gridgestagram
            sudo docker run -it -d -p 8080:8080 \
              --network gridgestagram-net \
              -e SPRING_PROFILES_ACTIVE=prod \
              --env-file .env \
              --name gridgestagram ${{ secrets.DOCKERHUB_USERNAME }}/gridgestagram

      - name: Remove IP FROM security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32